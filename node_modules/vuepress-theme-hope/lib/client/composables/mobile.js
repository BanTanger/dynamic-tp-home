import { useEventListener } from "@vueuse/core";
import { onMounted, inject, ref } from "vue";
import { useThemeData } from "./themeData";
export const mobileSymbol = Symbol.for("mobile");
export const injectMobile = (app) => {
    const isMobile = ref(false);
    app.provide(mobileSymbol, isMobile);
    // provide global helpers
    Object.defineProperties(app.config.globalProperties, {
        $isMobile: { get: () => isMobile.value },
    });
};
export const useMobile = () => {
    const isMobile = inject(mobileSymbol);
    if (!isMobile) {
        throw new Error("useMobile() is called without provider.");
    }
    return isMobile;
};
export const setupMobile = () => {
    const themeData = useThemeData();
    const isMobile = useMobile();
    const mobileHandler = () => {
        isMobile.value =
            window.innerWidth <= (themeData.value.mobileBreakPoint || 719);
    };
    useEventListener("resize", mobileHandler, false);
    useEventListener("orientationchange", mobileHandler, false);
    onMounted(() => {
        mobileHandler();
    });
};
//# sourceMappingURL=mobile.js.map